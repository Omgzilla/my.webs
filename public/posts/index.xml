<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - Omgz</title>
        <link>http://localhost:1313/posts/</link>
        <description>All Posts | Omgz</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 03 Jul 2023 13:05:02 &#43;0200</lastBuildDate><atom:link href="http://localhost:1313/posts/" rel="self" type="application/rss+xml" /><item>
    <title>[Workshop] Learn how to integrate your charm with COS-Lite all the way</title>
    <link>http://localhost:1313/cos-lite-workshop/</link>
    <pubDate>Mon, 03 Jul 2023 13:05:02 &#43;0200</pubDate><author>
        <name>Ohmygodzilla</name>
    </author><guid>http://localhost:1313/cos-lite-workshop/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="images/cos-lite-grafana.png" referrerpolicy="no-referrer">
            </div>This is a summary of what we talked about on the workshop Learn how to integrate your charm with COS-lite all the way How to setup a COS-lite environment and start tinkering with itNotice that this is an example setup to be able to start tinkering with COS-lite Creating a bridge for COS-liteWe started of by creating a bridge in netplan to separate the network for COS-lite.
Edit /etc/netplan/network-configuration-file.yaml]]></description>
</item><item>
    <title>Arch Maintenance Commands</title>
    <link>http://localhost:1313/arch-maintenance-commands/</link>
    <pubDate>Mon, 31 Oct 2022 13:55:33 &#43;0100</pubDate><author>
        <name>Ohmygodzilla</name>
    </author><guid>http://localhost:1313/arch-maintenance-commands/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="images/arch-pacman.png" referrerpolicy="no-referrer">
            </div>Arch maintenance commands Check systemd failed services 1 systemctl --failed Log files check 1 sudo journalctl -p 3 -xb Clean the journal 1 sudo journalctl --vacuum-time=2weeks Pacman Update 1 sudo pacman -Syu Delete Pacman Cache 1 sudo pacman -Scc Check Orphan packages 1 pacman -Qtdq Remove Orphan packages 1 sudo pacman -Rns $(pacman -Qtdq) Paru Update 1 paru Delete Paru Cache 1 paru -Scc Delete unwanted dependencies 1 paru -Yc Yay Update 1 yay Delete Yay Cache 1 yay -Scc Delete unwanted dependencies 1 yay -Yc Clean the Cache 1 rm -rf .]]></description>
</item><item>
    <title>Arch Install</title>
    <link>http://localhost:1313/arch-install/</link>
    <pubDate>Thu, 06 Oct 2022 14:14:36 &#43;0200</pubDate><author>
        <name>Ohmygodzilla</name>
    </author><guid>http://localhost:1313/arch-install/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="images/arch-linux.png" referrerpolicy="no-referrer">
            </div>This is my guide on how to install Arch Linux!
Something&rsquo;s missing? here is Arch Linux Wiki installation guide.
Base Installation Step 1. Load/Update Start by load keyboard layout and update repo mirrors
1.1 Load keyboard layout
1 2 ls /usr/share/kbd/keymaps/**/*.map.gz #list all layouts loadkeys sv-latin1 1.2 Update mirrorlist according to country
1 reflector -c Sweden -a 12 --sort rate --save /etc/pacman.d/mirrorlist Step 2. Format &amp; Partion disk/s2.1 List disks]]></description>
</item><item>
    <title>Proxmox</title>
    <link>http://localhost:1313/proxmox-cs/</link>
    <pubDate>Thu, 06 Oct 2022 13:39:59 &#43;0200</pubDate><author>
        <name>Ohmygodzilla</name>
    </author><guid>http://localhost:1313/proxmox-cs/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="images/proxmox.png" referrerpolicy="no-referrer">
            </div>Increase disk size in the GUI or with the following command
Resize Disk Increase disk sizeIncrease disk size in the GUI or with the following command
1 qm resize 100 virtio0 +5G Decrease disk size Before decreasing disk sizes in Proxmox, you should take a backup!
Convert qcow2 to raw 1 qemu-img convert vm-100.qcow2 vm-100.raw Shrink the disk 1 qemu-img resize -f raw vm-100.raw 10G Convert back to qcow2# 1 qemu-img convert -p -O qcow2 vm-100.]]></description>
</item><item>
    <title>Nginx Reverse Proxy</title>
    <link>http://localhost:1313/nginx-reverse-proxy/</link>
    <pubDate>Thu, 06 Oct 2022 03:27:30 &#43;0200</pubDate><author>
        <name>Ohmygodzilla</name>
    </author><guid>http://localhost:1313/nginx-reverse-proxy/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="images/nginx-reverse-proxy.webp" referrerpolicy="no-referrer">
            </div>Nginx Reverse ProxyThis is a guide on how to install nginx as a reverse proxy.
Install nginxArch
1 2 sudo pacman -Sy #Update repository sudo pacman -S nginx #Install package Ubuntu
1 2 sudo apt-get update #Update repository sudo apt-get install nginx #Install package Unlink defult configuration on ubuntu (optional)
1 sudo unlink /etc/nginx/sites-enabled/default Edit default configuration file 1 sudo nvim /etc/nginx/sites-available/default Copy and paste
1 2 3 4 5 6 7 8 9 server { listen 80; listen [::]:80; access_log /var/log/nginx/default-access.]]></description>
</item><item>
    <title>Docker Compose</title>
    <link>http://localhost:1313/docker-compose/</link>
    <pubDate>Thu, 06 Oct 2022 02:31:23 &#43;0200</pubDate><author>
        <name>Ohmygodzilla</name>
    </author><guid>http://localhost:1313/docker-compose/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="images/docker-compose.webp" referrerpolicy="no-referrer">
            </div>Docker-Compose <i class="fab fa-docker"></i>&nbsp;NetworkingBy default Docker-Compose will create a new network for the given compose file. You can change the behavior by defining custom networks in your compose file.
Create and assign custom networkExample:
1 2 3 4 5 6 7 networks: custom-network: services: app: networks: - custom-network Use existing networksIf you want to use an existing Docker network for your compose files, you can add the external: true parameter in your compose file Example:]]></description>
</item><item>
    <title>Docker Cli</title>
    <link>http://localhost:1313/docker-cli/</link>
    <pubDate>Thu, 06 Oct 2022 02:25:34 &#43;0200</pubDate><author>
        <name>Ohmygodzilla</name>
    </author><guid>http://localhost:1313/docker-cli/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="images/docker-cli.png" referrerpolicy="no-referrer">
            </div><p>Docker is a set of platform as a service products that use OS-Level virtualization to deliver software in packages called containers. Containers are isolated from one another and bundle their own software, libraries, and configuration files; they can communicate with each other through well-defined channels. Because all of the containers share the services of a single operating system kernel, they use fewer resources than virtual machines.</p>]]></description>
</item><item>
    <title>Mariadb Setup</title>
    <link>http://localhost:1313/mariadb-setup/</link>
    <pubDate>Thu, 06 Oct 2022 00:59:35 &#43;0200</pubDate><author>
        <name>Ohmygodzilla</name>
    </author><guid>http://localhost:1313/mariadb-setup/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="images/mariadb-setup.jpg" referrerpolicy="no-referrer">
            </div>MariaDB Cheat-Sheet Install MariaDB on Ubuntu 20.04 LTS 1 2 3 sudo apt update sudo apt install mariadb-server sudo mysql_secure_installation Access Database from outsideOpen /etc/mysql/mariadb.conf.d/50-server.cnf and change the bind-address to:
1 bind-address = 0.0.0.0 Create Administrative User Create a new user newuser for the host localhost with a new password: 1 CREATE USER &#39;newuser&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;password&#39;; Grant all permissions to the new user 1 GRANT ALL PRIVILEGES ON * .]]></description>
</item></channel>
</rss>
