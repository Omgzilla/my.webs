[{"categories":["documentation"],"content":"This is a summary of what we talked about on the workshop Learn how to integrate your charm with COS-lite all the way Deployment of a COS-lite on microk8 (kubernetes). Using cross-model relations with the VM charm observed. How grafana-dashboards, prometheus (metrics), loki (logs), prometheus alert rules are added automatically by the observed charm. How to ship alarms/alerts to PagerDuty and/or Slack (webhooks). How to setup a COS-lite environment and start tinkering with it Notice that this is an example setup to start tinkering with COS-lite We started of by creating a bridge in netplan to separate the network for COS-lite. Edit /etc/netplan/network-configuration-file.yaml network: version: 2 renderer: NetworkManager ethernets: wlp9s0: dhcp4: true dhcp6: true bridges: k8sbr0: interfaces: - wlp9s0 addresses: - 10.10.88.1/24 routes: - to: 0.0.0.0/0 via: 10.10.88.1 nameservers: addresses: - 10.10.88.1 dhcp4: false dhcp6: false After that we continued with installing microk8s from snap ","date":"2023-07-03","objectID":"/cos-lite-workshop/:0:0","tags":["COS-Lite","Documentation","Guide"],"title":"[Workshop]Learn how to integrate your charm with COS-Lite all the way","uri":"/cos-lite-workshop/"},{"categories":["cheat-sheet"],"content":" Arch maintenance commands Check systemd failed services systemctl --failed Log files check sudo journalctl -p 3 -xb Clean the journal sudo journalctl --vacuum-time=2weeks Pacman Update sudo pacman -Syu Delete Pacman Cache sudo pacman -Scc Check Orphan packages pacman -Qtdq Remove Orphan packages sudo pacman -Rns $(pacman -Qtdq) Paru Update paru Delete Paru Cache paru -Scc Delete unwanted dependencies paru -Yc Yay Update yay Delete Yay Cache yay -Scc Delete unwanted dependencies yay -Yc Clean the Cache rm -rf .cache/* ","date":"2022-10-31","objectID":"/arch-maintenance-commands/:0:0","tags":["Linux","Cheat-sheet"],"title":"Arch Maintenance Commands","uri":"/arch-maintenance-commands/"},{"categories":["documentation"],"content":" This is my guide on how to install Arch Linux! Something’s missing? here is Arch Linux Wiki installation guide. ","date":"2022-10-06","objectID":"/arch-install/:0:0","tags":["Linux","Cheat-sheet","Guide"],"title":"Arch Install","uri":"/arch-install/"},{"categories":["documentation"],"content":"Base Installation ","date":"2022-10-06","objectID":"/arch-install/:1:0","tags":["Linux","Cheat-sheet","Guide"],"title":"Arch Install","uri":"/arch-install/"},{"categories":["documentation"],"content":"Step 1. Load/Update Start by load keyboard layout and update repo mirrors 1.1 Load keyboard layout ls /usr/share/kbd/keymaps/**/*.map.gz #list all layouts loadkeys sv-latin1 1.2 Update mirrorlist according to country reflector -c Sweden -a 12 --sort rate --save /etc/pacman.d/mirrorlist ","date":"2022-10-06","objectID":"/arch-install/:1:1","tags":["Linux","Cheat-sheet","Guide"],"title":"Arch Install","uri":"/arch-install/"},{"categories":["documentation"],"content":"Step 2. Format \u0026 Partion disk/s 2.1 List disks lsblk 2.2 Use cgdisk to format and partion cgdisk /dev/sda # \u003c-- your disk Partion table efi (around 512M) swap (optional) root home (optional) 2.3 Make/Mount file system Make EFI mkfs.fat -F32 /dev/sda1 or mkfs.vfat /dev/sda1 Make SWAP Click if using SWAP mkswap /dev/sda2 swapon /dev/sda2 Make EXT4 Click if using EXT4 Make EXT4 file system mkfs.ext4 /dev/sda3 EXT4: Mount Mount root to /mnt mount /dev/sda3 /mnt Mount EFI mount --mkdir /dev/sda1 /mnt/boot Make BTRFS Click if using BTRFS mkfs.btrfs /dev/sda3 BTRFS: Mount Mount root to /mnt mount /dev/sda3 /mnt Change directory to /mnt cd /mnt Create subvolumes for btrfs btrfs subvolume create @ btrfs subvolume create @home btrfs subvolume create @var Go back and unmount cd umount /mnt Mount root with options mount -o noatime,compress=zstd,space_cache=v2,discard=async,subvol=@ /dev/sda3 /mnt Make directories mkdir -p /mnt/{boot,home,var} Mount home and var mount -o noatime,compress=zstd,space_cache=v2,discard=async,subvol=@home /dev/sda3 /mnt/home mount -o noatime,compress=zstd,space_cache=v2,discard=async,subvol=@ /dev/sda3 /mnt/var Mount EFI mount /dev/sda1 /mnt/boot ","date":"2022-10-06","objectID":"/arch-install/:1:2","tags":["Linux","Cheat-sheet","Guide"],"title":"Arch Install","uri":"/arch-install/"},{"categories":["documentation"],"content":"Step 3. Install base system 3.1 Install base system files and linux kernel Only Base pacstrap /mnt base linux linux-firmware LTS Long term support kernel pacstrap /mnt base linux-lts linux-firmware (EXT4) Base plus essentials pacstrap /mnt base linux linux-firmware intel-ucode neovim git (BTRFS) Base plus essentials* pacstrap /mnt base linux linux-firmware intel-ucode neovim git btrfs-progs Motherboard drivers intel-ucode amd-ucode ","date":"2022-10-06","objectID":"/arch-install/:1:3","tags":["Linux","Cheat-sheet","Guide"],"title":"Arch Install","uri":"/arch-install/"},{"categories":["documentation"],"content":"Step 4. Generate file system boot table 4.1 Generate file system boot table with UUID genfstab -U /mnt \u003e\u003e /mnt/etc/fstab cat /mnt/etc/fstab #confirm ","date":"2022-10-06","objectID":"/arch-install/:1:4","tags":["Linux","Cheat-sheet","Guide"],"title":"Arch Install","uri":"/arch-install/"},{"categories":["documentation"],"content":"Step 5. Enter Chroot 5.1 Enter your base install arch-chroot /mnt 5.2 Set time zone ln -sf /usr/share/zoneinfo/Europe/Stockholm /etc/localtime 5.3 Sync hardware clock hwclock --systohc 5.4 Set system language sed -i '178s/.//' /etc/locale.gen locale-gen or nvim /etc/locale.gen #Uncomment language of choice then save and exit locale-gen 5.5 Add system language in locale echo \"LANG=en_US.UTF-8\" \u003e\u003e /etc/locale.conf 5.6 Add keyboard layout for tty echo \"KEYMAP=sv-latin1\" \u003e\u003e /etc/vconsole.conf 5.7 Set hostname echo \"arch\" \u003e\u003e /etc/hostname 5.8 Add localhost to hosts echo \"127.0.0.1 localhost\" \u003e\u003e /etc/hosts echo \"::1 localhost\" \u003e\u003e /etc/hosts echo \"127.0.1.1 arch.localdomain arch\" \u003e\u003e /etc/hosts #change \"arch\" according to hostname 5.9 Change password for root passwd ","date":"2022-10-06","objectID":"/arch-install/:1:5","tags":["Linux","Cheat-sheet","Guide"],"title":"Arch Install","uri":"/arch-install/"},{"categories":["documentation"],"content":"Step 6. Install essentials 6.1 Necessary packages (bootloader, network) pacman -S grub grub-btrfs os-prober efibootmgr networkmanager network-manager-applet dialog wpa_supplicant mtools dosfstools inetutils dnsutils base-devel linux-headers avahi xdg-utils gvfs gvfs-smb nfs-utils acpi acpid acpi_call ntfs-3g Audio pacman -S alsa-utils pipewire pipewire-alsa pipewire-pulse pipewire-jack sof-firmware Battery management (laptop) pacman -S tlp Bluetooth pacman -S bluez bluez-utils Firewall pacman -S firewalld or pacman -S ufw Graphic’s pacman -S xf86-video-amdgpu #amd pacman -S xf86-video-intel #intel pacman -S nvidia nvidia-utils nvidia-settings #nvidia Printer pacman -S cups hplip Others pacman -S bash-completion flatpak ipset iptables-nft openssh reflector rsync xdg-user-dirs Virtual Machine pacman -S virt-manager qemu qemu-arch-extra edk2-ovmf bridge-utils dnsmasq nss-mdns vde2 openbsd-netcat iptables-nft ipset ","date":"2022-10-06","objectID":"/arch-install/:1:6","tags":["Linux","Cheat-sheet","Guide"],"title":"Arch Install","uri":"/arch-install/"},{"categories":["documentation"],"content":"Step 7. Install/Configure GRUB 7.1 Configure grub grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB #change the directory to /boot/efi if you mounted the EFI partition at /boot/efi 7.2 Make config file grub-mkconfig -o /boot/grub/grub.cfg #write changes to cfg ","date":"2022-10-06","objectID":"/arch-install/:1:7","tags":["Linux","Cheat-sheet","Guide"],"title":"Arch Install","uri":"/arch-install/"},{"categories":["documentation"],"content":"Step 8. Enable services 8.1 Enable services to boot on startup systemctl enable acpid #acpid systemctl enable avahi-daemon #avahi systemctl enable bluetooth #bluez systemctl enable cups.service #cups systemctl enable firewalld #firewalld systemctl enable fstrim.timer #fstrim (for ssd) systemctl enable libvirtd #virt-manager systemctl enable NetworkManager #networkmanager systemctl enable reflector.timer #reflector systemctl enable sshd #openssh systemctl enable tlp #tlp ","date":"2022-10-06","objectID":"/arch-install/:1:8","tags":["Linux","Cheat-sheet","Guide"],"title":"Arch Install","uri":"/arch-install/"},{"categories":["documentation"],"content":"Step 9. Add User 9.1 Method 1 Add a user useradd -m Omgzilla # add user named Omgzilla, change username passwd Omgzilla #change password for Omgzilla # If installed virtual machine usermod -aG libvirt Omgzilla # add user Omgzilla to libvirt group 9.1.1 Add user to sudo echo \"Omgzilla ALL=(ALL) ALL\" \u003e\u003e /etc/sudoers.d/Omgzilla # add user 'Omgzilla' to sudo. change \"Omgzilla\" to your username 9.1 Method 2 Add new user, user in wheel group useradd -mG wheel Omgzilla passwd Omgzilla EDITOR=nvim visudo # add following under root ALL=(ALL) ALL Omgzilla ALL=(ALL) ALL ","date":"2022-10-06","objectID":"/arch-install/:1:9","tags":["Linux","Cheat-sheet","Guide"],"title":"Arch Install","uri":"/arch-install/"},{"categories":["documentation"],"content":"Step 10. Finish installation 10.1 Exit chroot, unmount and reboot exit umount -a reboot ","date":"2022-10-06","objectID":"/arch-install/:1:10","tags":["Linux","Cheat-sheet","Guide"],"title":"Arch Install","uri":"/arch-install/"},{"categories":["documentation"],"content":"After base installation ","date":"2022-10-06","objectID":"/arch-install/:2:0","tags":["Linux","Cheat-sheet","Guide"],"title":"Arch Install","uri":"/arch-install/"},{"categories":["documentation"],"content":"Step 1. Basic configuration 1.1 Sync clock sudo timedatectl set-ntp true sudo hwclock --systohc 1.2 Setup reflector sudo reflector -c Sweden -a 12 --sort rate --save /etc/pacman.d/mirrorlist ","date":"2022-10-06","objectID":"/arch-install/:2:1","tags":["Linux","Cheat-sheet","Guide"],"title":"Arch Install","uri":"/arch-install/"},{"categories":["documentation"],"content":"Step 2. Install AUR helper 2.1 Paru Install paru git clone https://aur.archlinux.org/paru-bin cd paru-bin makepkg -si 2.1 PikAUR Install PikAUR git clone https://aur.archlinux.org/pikaur.git cd pikaur/ makepkg -si ","date":"2022-10-06","objectID":"/arch-install/:2:2","tags":["Linux","Cheat-sheet","Guide"],"title":"Arch Install","uri":"/arch-install/"},{"categories":["documentation"],"content":"Step 3. Install zram (optional) 3.1 Install zram (if no swap) paru -S zramd sudo nvim /etc/default/zramd sudo systemctl enable --now zramd.service ","date":"2022-10-06","objectID":"/arch-install/:2:3","tags":["Linux","Cheat-sheet","Guide"],"title":"Arch Install","uri":"/arch-install/"},{"categories":["documentation"],"content":"Step 4. Install timeshift (optional) 4.1 Install timeshift paru -S timeshift-bin timeshift-autosnap ","date":"2022-10-06","objectID":"/arch-install/:2:4","tags":["Linux","Cheat-sheet","Guide"],"title":"Arch Install","uri":"/arch-install/"},{"categories":["documentation"],"content":"Step 5. Install browser 5.1 Install a browser paru -S brave-bin #brave browser sudo pacman -S firefox #firefox ","date":"2022-10-06","objectID":"/arch-install/:2:5","tags":["Linux","Cheat-sheet","Guide"],"title":"Arch Install","uri":"/arch-install/"},{"categories":["documentation"],"content":"Step 6. Install firewall (optional) 6.1 *Install a firewall #Firewalld sudo pacman -S firewalld #UFW sudo pacman -S ufw ufw allow SSH ufw enable ","date":"2022-10-06","objectID":"/arch-install/:2:6","tags":["Linux","Cheat-sheet","Guide"],"title":"Arch Install","uri":"/arch-install/"},{"categories":["documentation"],"content":"Step 7. Install other useful stuff 7.1 Install auto-cpufreq (if using laptop, for better battery) paru -S auto-cpufreq sudo systemctl enable --now auto-cpufreq 7.2 Install System76 hybrid graphic switcher (laptop with dual graphic cards) paru -S --noconfirm system76-power sudo systemctl enable --now system76-power sudo system76-power graphics integrated paru -S --noconfirm gnome-shell-extension-system76-power-git 7.3 Install flatpak sudo pacman -S flatpak #Example sudo flatpak install spotify 7.4 Install pacman-contrib sudo pacman -S pacman-contrib 7.5 Install Fonts sudo pacman -S adobe-source-code-pro-fonts adobe-source-han-sans-otc-fonts adobe-source-han-serif-otc-fonts awesome-terminal-fonts bdf-unifont cantarell-fonts dina-font gentium-plus-font gnu-free-fonts inter-font noto-fonts noto-fonts-cjk noto-fonts-emoji tamsyn-font tex-gyre-fonts ttf-anonymous-pro ttf-bitstream-vera ttf-cascadia-code ttf-croscore ttf-dejavu ttf-droid ttf-fantasque-sans-mono ttf-fira-code ttf-fira-mono ttf-font-awesome ttf-hack ttf-ibm-plex ttf-inconsolata ttf-jetbrains-mono ttf-junicode ttf-liberation ttf-linux-libertine ttf-monofur ttf-opensans ttf-roboto ttf-ubuntu-font-family 7.6 Install arandr for multiple monitors sudo pacman -S arandr 7.7 Install wallpapers sudo pacman -S archlinux-wallpaper ","date":"2022-10-06","objectID":"/arch-install/:2:7","tags":["Linux","Cheat-sheet","Guide"],"title":"Arch Install","uri":"/arch-install/"},{"categories":["documentation"],"content":"Step 8. Create bridge network for vm (optional) 8.1 Create Bridge XML file nvim br10.xml Copy \u0026 paste following \u003cnetwork\u003e \u003cname\u003ebr10\u003c/name\u003e \u003cforward mode='nat'\u003e \u003cnat\u003e \u003cport start='1024' end='65535'/\u003e \u003c/nat\u003e \u003c/forward\u003e \u003cbridge name='br10' stp='on' delay='0'/\u003e \u003cip address='192.168.30.1' netmask='255.255.255.0'\u003e \u003cdhcp\u003e \u003crange start='192.168.30.50' end='192.168.30.200'/\u003e \u003c/dhcp\u003e \u003c/ip\u003e \u003c/network\u003e Save and exit 8.2 Enable bridged network sudo virsh net-autostart default ","date":"2022-10-06","objectID":"/arch-install/:2:8","tags":["Linux","Cheat-sheet","Guide"],"title":"Arch Install","uri":"/arch-install/"},{"categories":["documentation"],"content":"Step 9. Install Desktop Environment Pick a Desktop Environment below 9.1 Install Gnome I want to install Gnome 9.1.1 Method 1 Minimal install sudo pacman -S --noconfirm xorg gdm gnome gnome-tweaks 9.1.1 Method 2 Full install sudo pacman -S --noconfirm xorg gdm gnome gnome-extra gnome-tweaks 9.1.2 Arc theme (optional) sudo pacman -S arc-gtk-theme arc-icon-theme 9.1.3 Enable gdm sudo systemctl enable gdm 9.1.4 Reboot sudo reboot 9.2 Install KDE I want to install KDE 9.2.1 Method 1 Minimal install sudo pacman -S --noconfirm xorg sddm plasma 9.2.1 Method 2 Full install sudo pacman -S --noconfirm xorg sddm plasma kde-applications 9.2.2 Materia theme (optional) sudo pacman -S materia-kde papirus-icon-theme 9.2.3 Enable sddm sudo systemctl enable sddm 9.2.4 Reboot sudo reboot 9.3 Install BSPWM I want to install BSPWM 9.3.1 Install Base sudo pacman -S bspwm sxhkd Install Xorg 9.3.2 Method 1 Xorg minimal sudo pacman -S xorg-server xorg-xinit 9.3.2 Method 2 Xorg full sudo pacman -S xorg Install DM 9.3.3 Method 1 Install Ly DM (optional)* paru -S ly sudo systemctl enable ly 9.3.3 Method 2 LightDM sudo pacman -S lightdm light-locker paru -S lightdm-slick-greeter paru -S lightdm-settings 9.3.4 Install a launcher sudo pacman -S dmenu sudo pacman -S rofi 9.3.5 Install a file manager sudo pacman -S ranger sudo pacman -S nautilus sudo pacman -S thunar sudo pacman -S nnn 9.3.6 GTK preferences (optional) sudo pacman -S lxappearance 9.3.7 GTK theme and icons sudo pacman -S arc-gtk-theme arc-icon-theme 9.3.8 Notifications sudo pacman -S dunst 9.3.9 Media player controller sudo pacman -S playerctl 9.3.10 Screenshots sudo pacmna -S scrot 9.3.11 Statusbar paru -S polybar 9.3.12 Terminals sudo pacman -S alacritty sudo pacman -S kitty sudo pacman -S rxvt-unicode 9.3.13 Wallpaper tools sudo pacman -S feh sudo pacman -S nitrogen 9.3.14 X compositor sudo pacman -S picom 9.4 Install DWM I want to install DWM 9.4.1 Method 1 Install through script Step 1. Create script nvim install-dwm.sh Step 2. Copy and paste code below #!/bin/bash # Variables country=Poland kbmap=ch output=Virtual-1 resolution=1920x1080 # Options aur_helper=true install_ly=true gen_xprofile=false sudo timedatectl set-ntp true sudo hwclock --systohc sudo reflector -c $country -a 12 --sort rate --save /etc/pacman.d/mirrorlist # sudo firewall-cmd --add-port=1025-65535/tcp --permanent # sudo firewall-cmd --add-port=1025-65535/udp --permanent # sudo firewall-cmd --reload # sudo virsh net-autostart default if [[ $aur_helper = true ]]; then cd /tmp git clone https://aur.archlinux.org/paru.git cd paru/;makepkg -si --noconfirm;cd fi # Install packages sudo pacman -S xorg firefox polkit-gnome nitrogen lxappearance thunar # Install fonts sudo pacman -S --noconfirm dina-font tamsyn-font bdf-unifont ttf-bitstream-vera ttf-croscore ttf-dejavu ttf-droid gnu-free-fonts ttf-ibm-plex ttf-liberation ttf-linux-libertine noto-fonts ttf-roboto tex-gyre-fonts ttf-ubuntu-font-family ttf-anonymous-pro ttf-cascadia-code ttf-fantasque-sans-mono ttf-fira-mono ttf-hack ttf-fira-code ttf-inconsolata ttf-jetbrains-mono ttf-monofur adobe-source-code-pro-fonts cantarell-fonts inter-font ttf-opensans gentium-plus-font ttf-junicode adobe-source-han-sans-otc-fonts adobe-source-han-serif-otc-fonts noto-fonts-cjk noto-fonts-emoji # Pull Git repositories and install cd /tmp repos=( \"dmenu\" \"dwm\" \"dwmstatus\" \"st\" \"slock\" ) for repo in ${repos[@]} do git clone git://git.suckless.org/$repo cd $repo;make;sudo make install;cd .. done # XSessions and dwm.desktop if [[ ! -d /usr/share/xsessions ]]; then sudo mkdir /usr/share/xsessions fi cat \u003e ./temp \u003c\u003c \"EOF\" [Desktop Entry] Encoding=UTF-8 Name=Dwm Comment=Dynamic window manager Exec=dwm Icon=dwm Type=XSession EOF sudo cp ./temp /usr/share/xsessions/dwm.desktop;rm ./temp # Install ly if [[ $install_ly = true ]]; then git clone https://aur.archlinux.org/ly cd ly;makepkg -si sudo systemctl enable ly fi # .xprofile if [[ $gen_xprofile = true ]]; then cat \u003e ~/.xprofile \u003c\u003c EOF setxkbmap $","date":"2022-10-06","objectID":"/arch-install/:2:9","tags":["Linux","Cheat-sheet","Guide"],"title":"Arch Install","uri":"/arch-install/"},{"categories":["cheat-sheet"],"content":"Increase disk size in the GUI or with the following command ","date":"2022-10-06","objectID":"/proxmox-cs/:0:0","tags":["Cheat-sheet","Virtual machine","Container"],"title":"Proxmox","uri":"/proxmox-cs/"},{"categories":["cheat-sheet"],"content":"Resize Disk ","date":"2022-10-06","objectID":"/proxmox-cs/:1:0","tags":["Cheat-sheet","Virtual machine","Container"],"title":"Proxmox","uri":"/proxmox-cs/"},{"categories":["cheat-sheet"],"content":"Increase disk size Increase disk size in the GUI or with the following command qm resize 100 virtio0 +5G ","date":"2022-10-06","objectID":"/proxmox-cs/:1:1","tags":["Cheat-sheet","Virtual machine","Container"],"title":"Proxmox","uri":"/proxmox-cs/"},{"categories":["cheat-sheet"],"content":"Decrease disk size Before decreasing disk sizes in Proxmox, you should take a backup! Convert qcow2 to raw qemu-img convert vm-100.qcow2 vm-100.raw Shrink the disk qemu-img resize -f raw vm-100.raw 10G Convert back to qcow2# qemu-img convert -p -O qcow2 vm-100.raw vm-100.qcow2 ","date":"2022-10-06","objectID":"/proxmox-cs/:1:2","tags":["Cheat-sheet","Virtual machine","Container"],"title":"Proxmox","uri":"/proxmox-cs/"},{"categories":["documentation"],"content":"Nginx Reverse Proxy This is a guide on how to install nginx as a reverse proxy. ","date":"2022-10-06","objectID":"/nginx-reverse-proxy/:0:0","tags":["Web server","Reverse-proxy","Proxy","Nginx"],"title":"Nginx Reverse Proxy","uri":"/nginx-reverse-proxy/"},{"categories":["documentation"],"content":"Install nginx Arch sudo pacman -Sy #Update repository sudo pacman -S nginx #Install package Ubuntu sudo apt-get update #Update repository sudo apt-get install nginx #Install package Unlink defult configuration on ubuntu (optional) sudo unlink /etc/nginx/sites-enabled/default ","date":"2022-10-06","objectID":"/nginx-reverse-proxy/:1:0","tags":["Web server","Reverse-proxy","Proxy","Nginx"],"title":"Nginx Reverse Proxy","uri":"/nginx-reverse-proxy/"},{"categories":["documentation"],"content":"Edit default configuration file sudo nvim /etc/nginx/sites-available/default Copy and paste server { listen 80; listen [::]:80; access_log /var/log/nginx/default-access.log; #Change name error_log /var/log/nginx/default-error.log; #Change name location / { proxy_pass http://127.0.0.1:8000; #Address to host } } Save and exit ","date":"2022-10-06","objectID":"/nginx-reverse-proxy/:2:0","tags":["Web server","Reverse-proxy","Proxy","Nginx"],"title":"Nginx Reverse Proxy","uri":"/nginx-reverse-proxy/"},{"categories":["documentation"],"content":"Copy default sudo cp /etc/nginx/sites-available/default /etc/sites-available/example.com.conf Edit configuration sudo nvim /etc/nginx/sites-available/example.com.conf ","date":"2022-10-06","objectID":"/nginx-reverse-proxy/:2:1","tags":["Web server","Reverse-proxy","Proxy","Nginx"],"title":"Nginx Reverse Proxy","uri":"/nginx-reverse-proxy/"},{"categories":["documentation"],"content":"Enable your site Symlink configuration file sudo ln -s /etc/nginx/sites-available/example.com.conf /etc/nginx/sites-enabled/example.com.conf ","date":"2022-10-06","objectID":"/nginx-reverse-proxy/:3:0","tags":["Web server","Reverse-proxy","Proxy","Nginx"],"title":"Nginx Reverse Proxy","uri":"/nginx-reverse-proxy/"},{"categories":["documentation"],"content":"Check configuration file for errors sudo nginx -t nginx: the configuration file /etc/nginx/nginx.conf syntax is ok nginx: configuration file /etc/nginx/nginx.conf test is successful ","date":"2022-10-06","objectID":"/nginx-reverse-proxy/:4:0","tags":["Web server","Reverse-proxy","Proxy","Nginx"],"title":"Nginx Reverse Proxy","uri":"/nginx-reverse-proxy/"},{"categories":["documentation"],"content":"Adding TLS to your Nginx Reverse Proxy using Let’s Encrypt Important: Make sure your domain name points towards your server ip (A or AAAA record). With the current setup, all incoming traffic on the standard, non-securized, HTTP port is anserwered by Nginx, which passes it to the web application on the Instance. For security reasons, it is recommended to add an encryption layer with TLS/SSL and to use HTTPS. Whilst it is technically possible to use self-signed certificates, it may cause inconveniences as a warning is displayed by default in a user’s web browser when a self-signed certificate is used. A certificate authenticity (CA) can issue trusted certificates which are recognized by most modern web browsers. The CA Let’s Encrypt provides TLS certificates for free and the configuration of Nginx can be done easily with Certbot , a tool provided by the EFF . Install Certbot on your Instance by using the APT packet manager: apt-get update apt-get install software-properties-common add-apt-repository ppa:certbot/certbot apt-get update apt-get install python3-certbot-nginx Certbot provides a plugin designed for the Nginx web server, automatizing most of the configuration work related with requesting, installing and managing the TLS certificate: certbot --nginx Answer the prompts that display on the screen to request a valid Let’s Encrypt TLS certificate: Saving debug log to /var/log/letsencrypt/letsencrypt.log Plugins selected: Authenticator nginx, Installer nginx Which names would you like to activate HTTPS for? - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 1: your.domain.com - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - Select the appropriate numbers separated by commas and/ or spaces, or leave input blank to select all options shown (Enter 'c' to cancel): 1 Obtaining a new certificate Performing the following challenges:http-01 challenge for your.domain.com Waiting for verification...Cleaning up challenges Deploying Certificate to VirtualHost /etc/nginx/sites-enabled/reverse-proxy.conf Please choose whether or not to redirect HTTP traffic to HTTPS, removing HTTP access. - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 1: No redirect - Make no further changes to the webserver configuration. 2: Redirect - Make all requests redirect to secure HTTPS access. Choose this for snew sites, or if you're confident your site works on HTTPS. You can undo this change by editing your web server's configuration. - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - Select the appropriate number [1-2] then [enter] (press 'c' to cancel): 2 Redirecting all traffic on port 80 to ssl in /etc/nginx/sites-enabled/reverse-proxy.conf - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -Congratulations! You have successfully enabled https://your.domain.com You should test your configuration at: https://www.ssllabs.com/ssltest/analyze.html?d=your.domain.com - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - Note: When asked if you want to redirect HTTP traffic automatically to HTTPS, choose the option 2. This enables the automatic redirection of all incoming requests via an unencrypted HTTP connection to a secure HTTPS connection. Providing an additional layer of security for the Web application running behind the Nginx reverse proxy. ","date":"2022-10-06","objectID":"/nginx-reverse-proxy/:5:0","tags":["Web server","Reverse-proxy","Proxy","Nginx"],"title":"Nginx Reverse Proxy","uri":"/nginx-reverse-proxy/"},{"categories":["documentation"],"content":"Nginx reverse proxy example configuration You can set up your Nginx configuration file using different parameters and headers. The following example shows common parameters used in nginx.conf with a reverse proxy configuration: location/ { proxy_pass http://127.0.0.1:3000; proxy_http_version 1.1; proxy_cache_bypass $http_upgrade; proxy_set_header Host $host; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-Host $host; proxy_set_header X-Forwarded-Proto $scheme; proxy_set_header X-Forwarded-Port $server_port; } Where: proxy_http_version - Defines the HTTP protocol version (the default is set to 1.0) proxy_cache_bypass - This configuration allows responses to bypass cache. Host $host - The $host variable contains, in order of precedence: the host name from the request line, or the host name from the “Host” request header field, or the server name matching a request. X-Forwarded-For $proxy_add_x_forwarded_for - Defines the address of the client connected to the proxy. X-Real-IP $remote_addr - Contains the client IP address. It forwards the real visitor remote IP address to the proxied server. X-Forwarded-Host $host - Defines the original host requested by the client. X-Forwarded-Proto $scheme - If defined in an HTTPS server block, the HTTP responses from the proxied server are rewritten to HTTPS. X-Forwarded-Port $server_port - Defines the original port requested by the client. ","date":"2022-10-06","objectID":"/nginx-reverse-proxy/:6:0","tags":["Web server","Reverse-proxy","Proxy","Nginx"],"title":"Nginx Reverse Proxy","uri":"/nginx-reverse-proxy/"},{"categories":["documentation"],"content":"How to harden your server configuration ","date":"2022-10-06","objectID":"/nginx-reverse-proxy/:7:0","tags":["Web server","Reverse-proxy","Proxy","Nginx"],"title":"Nginx Reverse Proxy","uri":"/nginx-reverse-proxy/"},{"categories":["documentation"],"content":"Step 1. Disable any unwanted nginx modules When you install nginx, it automatically includes many modules. Currently, you cannot choose modules at runtime. To disable certain modules, you need to recompile nginx. We recommend that you disable any modules that are not required as this will minimize the risk of potential attacks by limiting allowed operations. To do this, use the configure option during installation. In the example below, we disable the autoindex module, which generates automatic directory listings, and then recompile nginx. # ./configure --without-http_autoindex_module # make # make install ","date":"2022-10-06","objectID":"/nginx-reverse-proxy/:7:1","tags":["Web server","Reverse-proxy","Proxy","Nginx"],"title":"Nginx Reverse Proxy","uri":"/nginx-reverse-proxy/"},{"categories":["documentation"],"content":"Step 2. Disable nginx server_tokens By default, the server_tokens directive in nginx displays the nginx version number. It is directly visible in all automatically generated error pages but also present in all HTTP responses in the Server header. This could lead to information disclosure – an unauthorized user could gain knowledge about the version of nginx that you use. You should disable the server_tokens directive in the nginx configuration file by setting server_tokens off. ","date":"2022-10-06","objectID":"/nginx-reverse-proxy/:7:2","tags":["Web server","Reverse-proxy","Proxy","Nginx"],"title":"Nginx Reverse Proxy","uri":"/nginx-reverse-proxy/"},{"categories":["documentation"],"content":"Step 3. Control Resources and limits To prevent potential DoS attacks on nginx, you can set buffer size limitations for all clients. You can do this in the nginx configuration file using the following directives: client_body_buffer_size – use this directive to specify the client request body buffer size. The default value is 8k or 16k but it is recommended to set this as low as 1k: client_body_buffer_size 1k. client_header_buffer_size – use this directive to specify the header buffer size for the client request header. A buffer size of 1k is adequate for most requests. client_max_body_size – use this directive to specify the maximum accepted body size for a client request. A 1k directive should be sufficient but you need to increase it if you are receiving file uploads via the POST method. large_client_header_buffers – use this directive to specify the maximum number and size of buffers to be used to read large client request headers. A large_client_header_buffers 2 1k directive sets the maximum number of buffers to 2, each with a maximum size of 1k. This directive will accept 2 kB data URI. Note: Some sources suggest that setting such limits may prevent potential buffer overflow attacks if such vulnerabilities are found in nginx. ","date":"2022-10-06","objectID":"/nginx-reverse-proxy/:7:3","tags":["Web server","Reverse-proxy","Proxy","Nginx"],"title":"Nginx Reverse Proxy","uri":"/nginx-reverse-proxy/"},{"categories":["documentation"],"content":"Step 4. Disable any unwanted HTTP methods We suggest that you disable any HTTP methods, which are not going to be utilized and which are not required to be implemented on the web server. If you add the following condition in the location block of the nginx virtual host configuration file, the server will only allow GET, HEAD, and POST methods and will filter out methods such as DELETE and TRACE. location / { limit_except GET HEAD POST { deny all; } } Another approach is to add the following condition to the server section (or server block). It can be regarded as more universal but you should be careful with if statements in the location context . if ($request_method !~ ^(GET|HEAD|POST)$ ) { return 444; } ","date":"2022-10-06","objectID":"/nginx-reverse-proxy/:7:4","tags":["Web server","Reverse-proxy","Proxy","Nginx"],"title":"Nginx Reverse Proxy","uri":"/nginx-reverse-proxy/"},{"categories":["documentation"],"content":"Step 5. Install ModSecurity for your nginx web server ModSecurity is an open-source module that works as a web application firewall. Its functionalities include filtering, server identity masking, and null-byte attack prevention. The module also lets you perform real-time traffic monitoring. We recommend that you follow the ModSecurity manual to install the mod_security module in order to strengthen your security options. Note that if ModSecurity does not meet your needs, you can also use other free WAF solutions . ","date":"2022-10-06","objectID":"/nginx-reverse-proxy/:7:5","tags":["Web server","Reverse-proxy","Proxy","Nginx"],"title":"Nginx Reverse Proxy","uri":"/nginx-reverse-proxy/"},{"categories":["documentation"],"content":"Step 6. Set up and configure nginx access and error logs The nginx access and error logs are enabled by default and are located in logs/error.log and logs/access.log respectively. If you want to change the location, you can use the error_log directive in the nginx configuration file. You can also use this directive to specify the logs that will be recorded according to their severity level. For example, a crit severity level will cause nginx to log critical issues and all issues that have a higher severity level than crit. To set the severity level to crit, set the error_log directive as follows: error_log logs/error.log crit; You can find a complete list of error_log severity levels in official nginx documentation . You can also modify the access_log directive in the nginx configuration file to specify a non-default location for access logs. Finally, you can use the log_format directive to configure the format of the logged messages as explained in nginx documentation . ","date":"2022-10-06","objectID":"/nginx-reverse-proxy/:7:6","tags":["Web server","Reverse-proxy","Proxy","Nginx"],"title":"Nginx Reverse Proxy","uri":"/nginx-reverse-proxy/"},{"categories":["documentation"],"content":"Step 7. Configure nginx to include security headers To additionally harden your nginx web server, you can add several different HTTP headers. Here are some of the options that we recommend. X-Frame-Options You use the X-Frame-Options HTTP response header to indicate if a browser should be allowed to render a page in a \u003cframe\u003e or an \u003ciframe\u003e. This could prevent clickjacking attacks. Therefore, we recommend that you enable this option for your nginx server. To do this, add the following parameter to the nginx configuration file in the server section: add_header X-Frame-Options \"SAMEORIGIN\"; Strict-Transport-Security HTTP Strict Transport Security (HSTS) is a method used by websites to declare that they should only be accessed using a secure connection (HTTPS). If a website declares an HSTS policy, the browser must refuse all HTTP connections and prevent users from accepting insecure SSL certificates. To add an HSTS header to your nginx server, you can add the following directive to your server section: add_header Strict-Transport-Security \"max-age=31536000; includeSubdomains; preload\"; CSP and X-XSS-Protection Content Security Policy (CSP) protects your web server against certain types of attacks, including Cross-site Scripting attacks (XSS) and data injection attacks. You can implement CSP by adding the following example Content-Security-Policy header (note that the actual header should be configured to match your unique requirements): add_header Content-Security-Policy \"default-src 'self' http: https: data: blob: 'unsafe-inline'\" always; The HTTP X-XSS-Protection header is supported by IE and Safari and is not necessary for modern browsers if you have a strong Content Security Policy. However, to help prevent XSS in the case of older browsers (that don’t support CSP yet), you can add the X-XSS Protection header to your server section: add_header X-XSS-Protection \"1; mode=block\"; ","date":"2022-10-06","objectID":"/nginx-reverse-proxy/:7:7","tags":["Web server","Reverse-proxy","Proxy","Nginx"],"title":"Nginx Reverse Proxy","uri":"/nginx-reverse-proxy/"},{"categories":["documentation"],"content":"Step 8. Configure SSL and Cipher suites The default configuration of nginx allows you to use insecure old versions of the TLS protocol (according to the official documentation : ssl_protocols TLSv1 TLSv1.1 TLSv1.2). This may lead to attacks such as the BEAST attack . Therefore, we recommend that you do not use old TLS protocols and change your configuration to support only newer, secure TLS versions. To do this, add the following directive in the server section of the nginx configuration file: ssl_protocols TLSv1.2 TLSv1.3; Additionally, you should specify cipher suites to make sure that no vulnerable suites are supported. To select the best cipher suites, read our article on TLS cipher hardening and add a ssl_ciphers directive to the server section to select the ciphers (as suggested in the article on cipher hardening ). We also recommend that you add the following directive to the server section: ssl_prefer_server_ciphers on; This directive will let the decision on which ciphers to use be made server-side not client-side. ","date":"2022-10-06","objectID":"/nginx-reverse-proxy/:7:8","tags":["Web server","Reverse-proxy","Proxy","Nginx"],"title":"Nginx Reverse Proxy","uri":"/nginx-reverse-proxy/"},{"categories":["documentation"],"content":"Step 9. Update your server regularly As with any other software, we recommend that you always update your nginx server to the latest stable version. New updates often contain fixes for vulnerabilities identified in previous versions, such as the directory traversal vulnerability (CVE-2009-3898 ) that existed in nginx versions prior to 0.7.63, and 0.8.x before 0.8.17. Updates also frequently include new security features and improvements. On the nginx.org site, you can find security advisories in a dedicated section and news about the latest updates on the main page. ","date":"2022-10-06","objectID":"/nginx-reverse-proxy/:7:9","tags":["Web server","Reverse-proxy","Proxy","Nginx"],"title":"Nginx Reverse Proxy","uri":"/nginx-reverse-proxy/"},{"categories":["documentation"],"content":"Step 10. Check your configuration with Gixy Gixy is an open-source tool that lets you check your nginx web server for typical misconfigurations. After you prepare your nginx configuration, it is always a good idea to check it with Gixy. You can find Gixy here . ","date":"2022-10-06","objectID":"/nginx-reverse-proxy/:7:10","tags":["Web server","Reverse-proxy","Proxy","Nginx"],"title":"Nginx Reverse Proxy","uri":"/nginx-reverse-proxy/"},{"categories":["documentation"],"content":"Step 11. You don’t have to do it manually If you don’t want to configure nginx manually, you can use a free online visual configuration tool made available by DigitalOcean. You can find this tool here . ","date":"2022-10-06","objectID":"/nginx-reverse-proxy/:7:11","tags":["Web server","Reverse-proxy","Proxy","Nginx"],"title":"Nginx Reverse Proxy","uri":"/nginx-reverse-proxy/"},{"categories":["cheat-sheet"],"content":"Docker-Compose ","date":"2022-10-06","objectID":"/docker-compose/:0:0","tags":["Docker","Cheat-sheet"],"title":"Docker Compose","uri":"/docker-compose/"},{"categories":["cheat-sheet"],"content":"Networking By default Docker-Compose will create a new network for the given compose file. You can change the behavior by defining custom networks in your compose file. ","date":"2022-10-06","objectID":"/docker-compose/:1:0","tags":["Docker","Cheat-sheet"],"title":"Docker Compose","uri":"/docker-compose/"},{"categories":["cheat-sheet"],"content":"Create and assign custom network Example: networks: custom-network: services: app: networks: - custom-network ","date":"2022-10-06","objectID":"/docker-compose/:1:1","tags":["Docker","Cheat-sheet"],"title":"Docker Compose","uri":"/docker-compose/"},{"categories":["cheat-sheet"],"content":"Use existing networks If you want to use an existing Docker network for your compose files, you can add the external: true parameter in your compose file Example: networks: existing-network: external: true ","date":"2022-10-06","objectID":"/docker-compose/:1:2","tags":["Docker","Cheat-sheet"],"title":"Docker Compose","uri":"/docker-compose/"},{"categories":["cheat-sheet"],"content":"Docker is a set of platform as a service products that use OS-Level virtualization to deliver software in packages called containers. Containers are isolated from one another and bundle their own software, libraries, and configuration files; they can communicate with each other through well-defined channels. Because all of the containers share the services of a single operating system kernel, they use fewer resources than virtual machines. The service has both free and premium tiers. The software that hosts the containers is called Docker Engine. Docker Cheat-Sheet ","date":"2022-10-06","objectID":"/docker-cli/:0:0","tags":["Cheat-sheet","Docker","Container"],"title":"Docker Cli","uri":"/docker-cli/"},{"categories":["cheat-sheet"],"content":"Container Management COMMAND DESCRIPTION docker create IMAGE Create a new container docker start CONTAINER Start a container docker stop CONTAINER Graceful stop a container docker kill CONTAINER Kill (SIGKILL) a container docker restart CONTAINER Graceful stop and restart a container docker pause CONTAINER Suspend a container docker unpause CONTAINER Resume a container docker rm CONTAINER Destroy a container ","date":"2022-10-06","objectID":"/docker-cli/:1:0","tags":["Cheat-sheet","Docker","Container"],"title":"Docker Cli","uri":"/docker-cli/"},{"categories":["cheat-sheet"],"content":"Container Bulk Management COMMAND DESCRIPTION docker stop $(docker ps -q) To stop all the running containers docker stop $(docker ps -a -q) To stop all the stopped and running containers docker kill $(docker ps -q) To kill all the running containers docker kill $(docker ps -a -q) To kill all the stopped and running containers docker restart $(docker ps -q) To restart all running containers docker restart $(docker ps -a -q) To restart all the stopped and running containers docker rm $(docker ps -q) To destroy all running containers docker rm $(docker ps -a -q) To destroy all the stopped and running containers docker pause $(docker ps -q) To pause all running containers docker pause $(docker ps -a -q) To pause all the stopped and running containers docker start $(docker ps -q) To start all running containers docker start $(docker ps -a -q) To start all the stopped and running containers docker rm -vf $(docker ps -a -q) To delete all containers including its volumes use docker rmi -f $(docker images -a -q) To delete all the images docker system prune To delete all dangling and unused images, containers, cache and volumes docker system prune -a To delete all used and unused images docker system prune --volumes To delete all docker volumes ","date":"2022-10-06","objectID":"/docker-cli/:2:0","tags":["Cheat-sheet","Docker","Container"],"title":"Docker Cli","uri":"/docker-cli/"},{"categories":["cheat-sheet"],"content":"Parameters COMMAND DESCRIPTION docker run IMAGE Start a new container docker run --name CONTAINER IMAGE Start a new container and set a name docker run -p HOSTPORT:CONTAINERPORT IMAGE Start a new container with mapped ports docker run -P IMAGE Start a new container and map all ports ","date":"2022-10-06","objectID":"/docker-cli/:2:1","tags":["Cheat-sheet","Docker","Container"],"title":"Docker Cli","uri":"/docker-cli/"},{"categories":["cheat-sheet"],"content":"Inspect COMMAND DESCRIPTION docker ps List running containers docker ps -a List all running containers docker logs CONTAINER Show a container output docker logs -f CONTAINER Follow a container output docker top CONTAINER List the processes running in a container docker diff Show the differences with the image (modified files) docker inspect Show information of a container (json formatted) ","date":"2022-10-06","objectID":"/docker-cli/:3:0","tags":["Cheat-sheet","Docker","Container"],"title":"Docker Cli","uri":"/docker-cli/"},{"categories":["cheat-sheet"],"content":"Commands COMMAND DESCRIPTION docker attach CONTAINER Attach to a container docker cp CONTAINER:PATH HOSTPATH Copy files from the container docker cp HOSTPATH CONTAINER:PATH Copy files into the container docker export CONTAINER Export the content of the container (tar archive) docker exec CONTAINER Run a command inside a container docker exec -it CONTAINER /bin/bash Open an interactive shell inside a container docker wait CONTAINER Wait until the container terminates and return the exit code ","date":"2022-10-06","objectID":"/docker-cli/:4:0","tags":["Cheat-sheet","Docker","Container"],"title":"Docker Cli","uri":"/docker-cli/"},{"categories":["cheat-sheet"],"content":"Images COMMAND DESCRIPTION docker images List all local images docker history IMAGE Show the image history docker inspect IMAGE Show information (json formatted) docker tag IMAGE TAG Tag an image docker commit CONTAINER IMAGE Create an image (from a container) docker import URL Create an image (from a tarball) docker rmi IMAGE Delete images docker pull REPO:[TAG] pull an image/repo from a registry docker push REPO:[TAG] push and image/repo to a registry docker search TEXT Search an image on the official registry docker login Login to a registry docker logout Logout from a registry docker save REPO:[TAG] Export an image/repo as a tarball docker load Load images from a tarball ","date":"2022-10-06","objectID":"/docker-cli/:5:0","tags":["Cheat-sheet","Docker","Container"],"title":"Docker Cli","uri":"/docker-cli/"},{"categories":["cheat-sheet"],"content":"Volumes COMMAND DESCRIPTION docker volumes List all volumes docker volume create VOLUME Create a volume docker volume inspect VOLUME Show information (json formatted) docker volume rm VOLUME Destroy a volume ","date":"2022-10-06","objectID":"/docker-cli/:6:0","tags":["Cheat-sheet","Docker","Container"],"title":"Docker Cli","uri":"/docker-cli/"},{"categories":["cheat-sheet"],"content":"Backup a container Backup docker data from inside container volumes and package it in a tarball archive. docker run --rm --volumes-from CONTAINER -v $(pwd):/backup busybox tar cvfz /backup/backup.tar CONTAINERPATH ","date":"2022-10-06","objectID":"/docker-cli/:6:1","tags":["Cheat-sheet","Docker","Container"],"title":"Docker Cli","uri":"/docker-cli/"},{"categories":["cheat-sheet"],"content":"Restore container from backup Restore the volume with a tarball archive. docker run --rm --volumes-from CONTAINER -v $(pwd):/backup busybox bash -c \"cd CONTAINERPATH \u0026\u0026 tar xvf /backup/backup.tar --strip 1\" ","date":"2022-10-06","objectID":"/docker-cli/:6:2","tags":["Cheat-sheet","Docker","Container"],"title":"Docker Cli","uri":"/docker-cli/"},{"categories":["cheat-sheet"],"content":"Networks ","date":"2022-10-06","objectID":"/docker-cli/:7:0","tags":["Cheat-sheet","Docker","Container"],"title":"Docker Cli","uri":"/docker-cli/"},{"categories":["cheat-sheet"],"content":"Troubleshooting ","date":"2022-10-06","objectID":"/docker-cli/:8:0","tags":["Cheat-sheet","Docker","Container"],"title":"Docker Cli","uri":"/docker-cli/"},{"categories":["cheat-sheet"],"content":"Networking docker run --name netshoot --rm -it nicolaka/netshoot /bin/bash ","date":"2022-10-06","objectID":"/docker-cli/:8:1","tags":["Cheat-sheet","Docker","Container"],"title":"Docker Cli","uri":"/docker-cli/"},{"categories":["documentation"],"content":"How to setup MariaDB basic","date":"2022-10-06","objectID":"/mariadb-setup/","tags":["Linux","Database","SQL"],"title":"Mariadb Setup","uri":"/mariadb-setup/"},{"categories":["documentation"],"content":"MariaDB Cheat-Sheet ","date":"2022-10-06","objectID":"/mariadb-setup/:0:0","tags":["Linux","Database","SQL"],"title":"Mariadb Setup","uri":"/mariadb-setup/"},{"categories":["documentation"],"content":"Install MariaDB on Ubuntu 20.04 LTS sudo apt update sudo apt install mariadb-server sudo mysql_secure_installation ","date":"2022-10-06","objectID":"/mariadb-setup/:1:0","tags":["Linux","Database","SQL"],"title":"Mariadb Setup","uri":"/mariadb-setup/"},{"categories":["documentation"],"content":"Access Database from outside Open /etc/mysql/mariadb.conf.d/50-server.cnf and change the bind-address to: bind-address = 0.0.0.0 ","date":"2022-10-06","objectID":"/mariadb-setup/:2:0","tags":["Linux","Database","SQL"],"title":"Mariadb Setup","uri":"/mariadb-setup/"},{"categories":["documentation"],"content":"Create Administrative User Create a new user newuser for the host localhost with a new password: CREATE USER 'newuser'@'localhost' IDENTIFIED BY 'password'; Grant all permissions to the new user GRANT ALL PRIVILEGES ON * . * TO 'newuser'@'localhost'; Update permissions FLUSH PRIVILEGES; ","date":"2022-10-06","objectID":"/mariadb-setup/:3:0","tags":["Linux","Database","SQL"],"title":"Mariadb Setup","uri":"/mariadb-setup/"}]